#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞
"""

import requests
import json
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv('/app/backend/.env')

TELEGRAM_TOKEN = os.environ['TELEGRAM_TOKEN']
USERSBOX_TOKEN = os.environ['USERSBOX_TOKEN']
USERSBOX_BASE_URL = os.environ['USERSBOX_BASE_URL']

def test_phone_detection():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤"""
    import re
    
    def detect_search_type(query: str) -> str:
        """Detect search type based on query pattern"""
        query = query.strip()
        
        phone_patterns = [
            r'^\+?[7-8]\d{10}$',
            r'^\+?\d{10,15}$',
            r'^[7-8]\(\d{3}\)\d{3}-?\d{2}-?\d{2}$'
        ]
        
        for pattern in phone_patterns:
            if re.match(pattern, query.replace(' ', '').replace('-', '').replace('(', '').replace(')', '')):
                return "üì± –¢–µ–ª–µ—Ñ–æ–Ω"
        
        return "üîç –û–±—â–∏–π –ø–æ–∏—Å–∫"
    
    test_phones = [
        "+79123456789",
        "79123456789",
        "89123456789",
        "7(912)345-67-89",
        "8(912)345-67-89",
        "+7 912 345 67 89",
        "79123456789",
        "89123456789"
    ]
    
    print("=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –†–ê–°–ü–û–ó–ù–ê–í–ê–ù–ò–Ø –¢–ï–õ–ï–§–û–ù–û–í ===")
    for phone in test_phones:
        result = detect_search_type(phone)
        print(f"–ù–æ–º–µ—Ä: {phone:20} -> {result}")
    
    return True

def test_usersbox_api():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API Usersbox"""
    headers = {"Authorization": USERSBOX_TOKEN}
    url = f"{USERSBOX_BASE_URL}/search"
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –Ω–æ–º–µ—Ä–∞
    test_numbers = [
        "+79123456789",
        "79123456789",
        "89123456789"
    ]
    
    print("\n=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï API USERSBOX ===")
    for phone in test_numbers:
        try:
            response = requests.get(url, headers=headers, params={"q": phone}, timeout=10)
            data = response.json()
            
            print(f"\n–ù–æ–º–µ—Ä: {phone}")
            print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
            print(f"–û—Ç–≤–µ—Ç: {json.dumps(data, indent=2, ensure_ascii=False)}")
            
            if response.status_code == 200:
                if data.get('status') == 'success':
                    count = data.get('data', {}).get('count', 0)
                    print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {count}")
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞: {data.get('error', {}).get('message', 'Unknown')}")
            else:
                print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        
        print("-" * 50)

def test_telegram_bot():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram –±–æ—Ç–∞"""
    print("\n=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï TELEGRAM –ë–û–¢–ê ===")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –±–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω
    try:
        response = requests.get(f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/getMe", timeout=10)
        if response.status_code == 200:
            bot_info = response.json()
            print(f"‚úÖ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω: {bot_info['result']['username']}")
        else:
            print(f"‚ùå –ë–æ—Ç –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–æ—Ç–∞: {e}")

if __name__ == "__main__":
    print("–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤...")
    
    # –¢–µ—Å—Ç 1: –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤
    test_phone_detection()
    
    # –¢–µ—Å—Ç 2: API Usersbox
    test_usersbox_api()
    
    # –¢–µ—Å—Ç 3: Telegram –±–æ—Ç
    test_telegram_bot()
    
    print("\n=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û ===")